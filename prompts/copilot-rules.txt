# GitHub Copilot Instructions for My Landing Page Project

## Guiding Principles
- **Clarity and Simplicity:** Prioritize code that is easy to read and understand. Avoid overly complex or "clever" solutions.
- **Performance First:** All generated code must be optimized for fast loading times. This includes using efficient selectors, optimizing images, and lazy loading non-critical assets.
- **Responsive Design:** All pages must use a responsive layout that adapts to desktop, tablet, and mobile.

## HTML Rules
1.  **Semantic HTML:** Always use semantic HTML5 tags (`<header>`, `<nav>`, `<main>`, `<section>`, `<article>`, `<footer>`, etc.). Do not use `<div>` or `<span>` when a more specific semantic tag is appropriate.
2.  **Accessibility (a11y):** All interactive elements must be keyboard-accessible. Images must have descriptive `alt` attributes. Forms must have correctly associated `<label>` tags for all inputs. Use ARIA roles only when necessary to supplement native HTML semantics.
3.  **SEO:** Ensure all pages have a unique and descriptive `<title>` tag. Include a `<meta name="description">` tag with a concise summary of the page content.

## CSS Rules
1.  **Naming Convention:** Use the BEM (Block, Element, Modifier) naming convention for all CSS classes. For example: `.card__title--highlighted`. This ensures styles are scoped and reusable.
2.  **Units:** Use relative units like `rem` for font sizes and `em` for margins/paddings where appropriate to ensure scalability and accessibility. Use `vh` and `vw` for viewport-relative sizing.
3.  **Organization:** Group related CSS properties together. For example: Positioning, Box Model, Typography, Visuals, and Miscellaneous.
4.  **No Inline Styles:** Do not generate HTML with inline `style` attributes. All styles should be in CSS files.

## JavaScript Rules
1.  **Modern JavaScript:** Use modern ES6+ syntax (e.g., `const` and `let` over `var`, arrow functions, template literals).
2.  **Performance:** Avoid manipulating the DOM in loops. When adding event listeners, consider event delegation for performance. Ensure scripts, especially third-party ones, are loaded with `async` or `defer` to avoid blocking page rendering.
3.  **Readability:** All functions should be small and focused on a single responsibility. Add concise comments to explain complex logic, but prefer self-documenting code.
4.  **No jQuery:** Do not use jQuery. All DOM manipulations and event handling should be done with vanilla JavaScript.